package com.slavlend.Executor;

import com.slavlend.Compiler.Compiler;
import com.slavlend.Compiler.Functions.PolarFunctions;
import com.slavlend.Parser.Statements.BlockStatement;
import com.slavlend.App;
import com.slavlend.Colors;
import com.slavlend.Lexer.Lexer;
import com.slavlend.Parser.Parser;
import com.slavlend.PolarLogger;
import com.slavlend.Vm.IceVm;

/*
–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ–¥–æ–º.
–≠–∫–∑–µ–∫—å—é—Ç–µ—Ä.
 */
@SuppressWarnings("ExtractMethodRecommender")
public class Executor {
    // –∑–∞–ø—É—Å–∫ polar-—Ñ–∞–π–ª–∞
    public static void exec(ExecutorSettings settings) {
        // —Å—Ç–∞—Ç—É—Å - –ø–∞—Ä—Å–∏–Ω–≥
        System.out.println(Colors.ANSI_GREEN + "üó∫Ô∏è Parsing..." + Colors.ANSI_RESET);
        // –ª–µ–∫—Å–µ—Ä
        Lexer lexer = new Lexer(settings.getCode());
        // —Ç–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è
        lexer.Tokenize();

        // –ø–∞—Ä—Å–µ—Ä
        Parser parser = new Parser(
                lexer.getTokens()
        );
        String envPath = settings.getFilePath().substring(0, settings.getFilePath().lastIndexOf('\\'));
        String filePath = settings.getFilePath().substring(
                settings.getFilePath().lastIndexOf('\\')+1
        ).replace(".polar", "");
        parser.setEnvironmentPath(envPath);
        parser.setFileName(filePath);
        App.parser = parser;
        // –ø–∞—Ä—Å–∏–º –∫–æ–¥
        BlockStatement statement = parser.parse();
        // –∫–æ–º–ø–∏–ª–∏—Ä—É–µ–º
        System.out.println(Colors.ANSI_BLUE + "üßä Compiling..." + Colors.ANSI_RESET);
        statement.compile();
        // –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ –∏—Å–ø–æ–ª–Ω—è–µ–º –∫–æ–¥
        System.out.println(Colors.ANSI_DARK_BLUE + "ü•∂ Compiled!" + Colors.ANSI_RESET);
        // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
        IceVm.setLogger(PolarLogger.polarLogger);
        // –ø–æ–º–µ—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ü–æ–ª–∞—Ä–∞
        PolarFunctions.provide();
        // –≤—ã–≤–æ–¥–∏–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        System.out.println();
        // –∏—Å–ø–æ–ª–Ω—è–µ–º
        Compiler.iceVm.run(Compiler.code, settings.isDebugMode());
    }
}

package com.slavlend.Executor;

import com.slavlend.Polar.Stack.Classes;
import com.slavlend.Polar.Stack.Storage;
import com.slavlend.Polar.StackHistoryWriter;
import com.slavlend.App;
import com.slavlend.Colors;
import com.slavlend.Lexer.Lexer;
import com.slavlend.Parser.Parser;

/*
–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ–¥–æ–º.
–≠–∫–∑–µ–∫—å—é—Ç–µ—Ä.
 */
public class Executor {
    // –∑–∞–ø—É—Å–∫ polar-—Ñ–∞–π–ª–∞
    public static void exec(ExecutorSettings settings) {
        // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º c—Ç—ç–∫
        new Classes();
        new Storage();
        new StackHistoryWriter();
        Storage.getInstance().threadInit();

        // —Å—Ç–∞—Ç—É—Å - –ø–∞—Ä—Å–∏–Ω–≥
        System.out.println("üó∫Ô∏è Parsing...");

        // –ª–µ–∫—Å–µ—Ä
        Lexer lexer = new Lexer(settings.getCode());
        // —Ç–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è
        lexer.Tokenize();

        // –ø–∞—Ä—Å–µ—Ä
        Parser parser = new Parser(
                lexer.getTokens()
        );
        String envPath = settings.getFilePath().substring(0, settings.getFilePath().lastIndexOf('\\'));
        String filePath = settings.getFilePath().substring(
                settings.getFilePath().lastIndexOf('\\')+1
        ).replace(".polar", "");
        parser.setEnv(envPath);
        parser.setFile(filePath);
        App.parser = parser;

        // –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è
        System.out.println(Colors.ANSI_GREEN + "üê≤ Done!" + Colors.ANSI_RESET);
        System.out.println(Colors.ANSI_CYAN + "‚ùÑÔ∏è Interpreting..." + Colors.ANSI_RESET);

        // –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º
        parser.execute();
    }
}
